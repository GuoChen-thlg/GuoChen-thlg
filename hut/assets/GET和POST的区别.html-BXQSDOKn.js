import{_ as e,c as t,o as a,a as s}from"./app-Bg-rEz4_.js";const i="/hut/assets/get-post-YxBlO6vj.png",o="/hut/assets/get-post1-glB6wtJJ.png",n={},r=s('<p><img src="'+i+'" alt="get VS post"> 相信小伙伴在面试中常常遇到面试官问道 GET 和 POST 两种请求方式有什么区别，</p><p>相信大家马上就能想到</p><blockquote><p>GET 请求可被缓存<br> GET 请求保留在浏览器历史记录中<br> GET 请求可被收藏为书签<br> GET 请求不应在处理敏感数据时使用<br> GET 请求有长度限制<br> GET 请求只应当用于取回数据（不修改）</p></blockquote><blockquote><p>POST 请求不会被缓存<br> POST 请求不会保留在浏览器历史记录中<br> POST 不能被收藏为书签<br> POST 请求对数据长度没要求<br></p></blockquote><p>轻轻松松答出了一个满意的答案 （以上答案参考 w3school）</p><h3 id="get" tabindex="-1"><a class="header-anchor" href="#get"><span>GET</span></a></h3><ul><li>请求是否有主体 否</li><li>成功的响应是否有主体 是</li><li>安全 是</li><li>幂等 是</li><li>可缓存 是</li><li>HTML 表单是否支持 是</li></ul><h3 id="post" tabindex="-1"><a class="header-anchor" href="#post"><span>POST</span></a></h3><ul><li>请求是否有主体 是</li><li>成功的响应是否有主体 是</li><li>安全 否</li><li>幂等 否</li><li>可缓存 Only if freshness information is - included</li><li>HTML 表单是否支持 是</li></ul><p>关于有人说 GET 不安全会暴露参数数据而 POST 安全等</p><p>通过查阅<a href="https://tools.ietf.org/html/rfc7231#section-4.3.1" target="_blank" rel="noopener noreferrer">http</a>文档中定义的安全方法得知 GET 方法被定义为安全方法</p><blockquote><h2 id="safe-methods" tabindex="-1"><a class="header-anchor" href="#safe-methods"><span>Safe Methods</span></a></h2><p>Request methods are considered &quot;safe&quot; if their defined semantics are essentially read-only; i.e., the client does not request, and does not expect, any state change on the origin server as a result of applying a safe method to a target resource. Likewise, reasonable use of a safe method is not expected to cause any harm, loss of property, or unusual burden on the origin server.<br> This definition of safe methods does not prevent an implementation from including behavior that is potentially harmful, that is not entirely read-only, or that causes side effects while invoking a safe method. What is important, however, is that the client did not request that additional behavior and cannot be held accountable for it. For example, most servers append request information to access log files at the completion of every response, regardless of the method, and that is considered safe even though the log storage might become full and crash the server. Likewise, a safe request initiated by selecting an advertisement on the Web will often have the side effect of charging an advertising account.<br> Of the request methods defined by this specification, the GET, HEAD, OPTIONS, and TRACE methods are defined to be safe.</p></blockquote><p>这里的安全是对服务器数据来说的，你通过 GET 方法获取数据，无法对数据做出破坏行为，而 POST 则不会。但有时我们所表达的 GET 不安全其实说的是 GET 的幂等 以及可留下浏览记录</p><p><img src="'+o+'" alt="get &lt;=&gt; json &lt;=&gt; post"> 例： <br> 银行网站 A，它以 GET 请求来完成银行转账的操作，如：<code>https://www.xxx.com/Transfer.php?toBankId=11&amp;money=1000</code> 危险网站 B，它里面有一段 HTML 的代码如下：</p><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">&lt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> img src=https://www.xxx.com/Transfer.php?toBankId=11&amp;money=1000/&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>首先，你登录了银行网站 A，然后访问危险网站 B，噢，这时你会发现你的银行账户少了 1000 块……</p><p>例：<br> 登录某网站 <code>https://xxx.com/login?user=admin&amp;password=admin</code> 当别人浏览你的历史记录时就可以知道你的账号密码</p>',17),l=[r];function c(d,p){return a(),t("div",null,l)}const m=e(n,[["render",c],["__file","GET和POST的区别.html.vue"]]),T=JSON.parse(`{"path":"/GET%E5%92%8CPOST%E7%9A%84%E5%8C%BA%E5%88%AB.html","title":"GET和POST的区别","lang":"zh-CN","frontmatter":{"title":"GET和POST的区别","tags":["面试"],"categories":["HTTP"],"copyright":true,"abbrlink":30689,"date":"2021-04-07T14:13:50.000Z","createTime":"2021-04-07T14:13:50.000Z","top":null,"description":"get VS post 相信小伙伴在面试中常常遇到面试官问道 GET 和 POST 两种请求方式有什么区别， 相信大家马上就能想到 GET 请求可被缓存 GET 请求保留在浏览器历史记录中 GET 请求可被收藏为书签 GET 请求不应在处理敏感数据时使用 GET 请求有长度限制 GET 请求只应当用于取回数据（不修改） POST 请求不会被缓存 POS...","head":[["script",{"id":"check-dark-mode"},";(function () {const um= localStorage.getItem('vuepress-theme-appearance') || 'auto';const sm = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;if (um === 'dark' || (um !== 'light' && sm)) {document.documentElement.classList.add('dark');}})();"],["script",{"id":"check-mac-os"},"document.documentElement.classList.toggle('mac', /Mac|iPhone|iPod|iPad/i.test(navigator.platform))"],["meta",{"property":"og:url","content":"https://blog.thlg.xyz/hut/GET%E5%92%8CPOST%E7%9A%84%E5%8C%BA%E5%88%AB.html"}],["meta",{"property":"og:site_name","content":"天火流光"}],["meta",{"property":"og:title","content":"GET和POST的区别"}],["meta",{"property":"og:description","content":"get VS post 相信小伙伴在面试中常常遇到面试官问道 GET 和 POST 两种请求方式有什么区别， 相信大家马上就能想到 GET 请求可被缓存 GET 请求保留在浏览器历史记录中 GET 请求可被收藏为书签 GET 请求不应在处理敏感数据时使用 GET 请求有长度限制 GET 请求只应当用于取回数据（不修改） POST 请求不会被缓存 POS..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:tag","content":"面试"}],["meta",{"property":"article:published_time","content":"2021-04-07T14:13:50.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"GET和POST的区别\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-04-07T14:13:50.000Z\\",\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[{"level":3,"title":"GET","slug":"get","link":"#get","children":[]},{"level":3,"title":"POST","slug":"post","link":"#post","children":[]}],"readingTime":{"minutes":2.55,"words":766},"git":{"updatedTime":null,"contributors":[]},"autoDesc":true,"filePathRelative":"GET和POST的区别.md","categoryList":[]}`);export{m as comp,T as data};
